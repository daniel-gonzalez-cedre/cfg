# MODES #######################################################################
  :: default  : yabai -m config active_window_border_color 0xff61afef
  :: focus  @ : yabai -m config active_window_border_color 0xffe06c75  # Focus window, desktop, monitors
  :: grid   @ : yabai -m config active_window_border_color 0xff56b6c2  # Floating window layout
  :: swap   @ : yabai -m config active_window_border_color 0xffc678dd  # Swap windows
  :: warp   @ : yabai -m config active_window_border_color 0xffe5c07b  # Warp and send to desktop/monitors
  :: warpnf @ : yabai -m config active_window_border_color 0xffd19a66  # Same, but don't follow focus
  :: resize @ : yabai -m config active_window_border_color 0xff98c379  # Resize window operations

  # CTRL-SPACE is the global hotkey to toggle in/out of modal mode.
  # entry is always to FOCUS mode; leaving can be done with CTRL-C or ESCAPE.
  default                                 < ctrl - space ; focus
  focus, grid, swap, warp, warpnf, resize < ctrl - space ; default
  # default                                 < ctrl - \\    ; focus
  # focus, grid, swap, warp, warpnf, resize < ctrl - \\    ; default
  focus, grid, swap, warp, warpnf, resize < escape       ; default
  focus, grid, swap, warp, warpnf, resize < ctrl - c     ; default

# GLOBAL HOTKEYS #######################################################################
  # default < cmd - return      : open -na Terminal ;
  # default < ctrl - return     : open -na Terminal ; yabai -m space --balance
  default < cmd - return        : open -na Alacritty ;
  default < cmd + ctrl - return : open -na Alacritty ; yabai -m space --balance

  # in any non-DEFAULT mode, switch modes with single mnemonic keystroke.
  focus, grid, swap, warp, warpnf, resize < f         ; focus
  focus, grid, swap, warp, warpnf, resize < g         ; grid
  focus, grid, swap, warp, warpnf, resize < s         ; swap
  focus, grid, swap, warp, warpnf, resize < r         ; resize
  focus, grid, swap, warp, warpnf, resize < w         ; warp
  focus, grid, swap, warp, warpnf, resize < shift - w ; warpnf

  # the following keybindings are available in all non-DEFAULT modes.
  focus, grid, swap, warp, warpnf, resize < q         : yabai -m window --close
  focus, grid, swap, warp, warpnf, resize < o         : yabai -m space --rotate 90
  focus, grid, swap, warp, warpnf, resize < shift - o : yabai -m space --rotate 270
  focus, grid, swap, warp, warpnf, resize < x         : yabai -m space --mirror y-axis
  focus, grid, swap, warp, warpnf, resize < y         : yabai -m space --mirror x-axis
  focus, grid, swap, warp, warpnf, resize < e         : yabai -m space --balance
  focus, grid, swap, warp, warpnf, resize < i         : yabai -m window --toggle split 
  focus, grid, swap, warp, warpnf, resize < m         : yabai -m window --toggle zoom-fullscreen
  focus, grid, swap, warp, warpnf, resize < shift - m : yabai -m window --toggle native-fullscreen
  focus, grid, swap, warp, warpnf, resize < z         : yabai -m window --toggle float --grid 4:4:1:1:2:2
  # focus, grid, swap, warp, warpnf, resize < q         : chunkc tiling::window --close
  # focus, grid, swap, warp, warpnf, resize < p         : chunkc tiling::window --toggle parent
  # focus, grid, swap, warp, warpnf, resize < i         : chunkc tiling::window --toggle split


# FOCUS  MODE #######################################################################
  # Change focus using standard vi directional keys. Enter changes focus to the
  # biggest window. You'll see this theme repeated over and over again. Since this
  # is such a common operation, no modifier keys are used.
  focus < k      : yabai -m window       --focus north
  focus < j      : yabai -m window       --focus south
  focus < l      : yabai -m window       --focus east
  focus < h      : yabai -m window       --focus west
  focus < return : chunkc tiling::window --focus biggest

  # Change the monitor focus using numbers corresponding to monitor or cycle
  # through the monitors using tab and shift - tab combination. You'll see this
  # pattern repeated when we get WARP moded as well. The non-modified keys will
  # warp to a monitor, and prefixing with cmd will warp to desktop. Again, the
  # goal was to aim for consistency.
  focus < 1           : yabai -m display --focus 1
  focus < 2           : yabai -m display --focus 2
  focus < 3           : yabai -m display --focus 3
  focus < tab         : yabai -m display --focus next
  focus < shift - tab : yabai -m display --focus prev

  # Prefix the above with cmd to change the desktop focus using numbers
  # corresponding to desktop or cycle through the monitors using tab and shift -
  # tab combination. Note: we do not use chunkwm's fast desktop switching as it
  # requires chunk-sa (which injects code into the Dock.app). Insead, we fake
  # this by sending keystrokes to mission control, but in order to do so, me must
  # exit FOCUS mode, send the gloabl mission control keystroke, and then re-enter
  # FOCUS mode, so we remain in focus mode. It's very likely that you'll want to
  # change focus of windows after switching desktops, which is why we want to get
  # back to FOCUS mode. Finally, due timing issues, we introduce a sleep as the
  # standard mode commands are executed before mission control is done with its
  # animation. Direct jumping to a window is faster than cycling through
  # desktops, so the sleep delays are different.
  focus < cmd - 1           : yabai -m space --focus 1;    yabai -m config active_window_border_color 0xffe06c75
  focus < cmd - 2           : yabai -m space --focus 2;    yabai -m config active_window_border_color 0xffe06c75
  focus < cmd - 3           : yabai -m space --focus 3;    yabai -m config active_window_border_color 0xffe06c75
  focus < cmd - tab         : yabai -m space --focus next; yabai -m config active_window_border_color 0xffe06c75
  focus < cmd + shift - tab : yabai -m space --focus prev; yabai -m config active_window_border_color 0xffe06c75

  # Change the layout mode of a desktop to one of the three supported modes.
  focus < cmd - b : yabai -m space --layout bsp     # mnemonic: _b_sp
  focus < cmd - s : yabai -m space --layout stack   # mnemonic: _s_tack
  focus < cmd - f : yabai -m space --layout float   # mnemonic: _f_loat

# SWAP MODE ########################################################################
  # Swap windows using standard vi directional keys. 
  swap < k      : yabai -m window --swap north
  swap < j      : yabai -m window --swap south
  swap < l      : yabai -m window --swap east
  swap < h      : yabai -m window --swap west
  swap < return : yabai -m window --swap largest


# GRID MODE ########################################################################
  # Grid mode bindings are to resize and place floating windows on your desktop
  # in well known positions. The standard non-modified keys are used to resize
  # the window to the top-half, bottom-half, right-half, left-half, and center of
  # screen respectively.
  grid            < k                 : yabai -m window --grid 2:1:0:0:1:1
  grid            < j                 : yabai -m window --grid 2:1:0:1:1:1
  grid            < l                 : yabai -m window --grid 1:2:1:0:1:1
  grid            < h                 : yabai -m window --grid 1:2:0:0:1:1
  grid            < return            : yabai -m window --grid 6:6:1:1:4:4

  # Prefix the above with shift modifier to resize a bit smaller: top-third,
  # bottom-third, left-third, right-third, and smaller center.
  grid            < shift - k         : yabai -m window --grid 3:1:0:0:1:1
  grid            < shift - j         : yabai -m window --grid 3:1:0:2:1:1
  grid            < shift - l         : yabai -m window --grid 1:3:2:0:1:1
  grid            < shift - h         : yabai -m window --grid 1:3:0:0:1:1
  grid            < shift - return    : yabai -m window --grid 4:4:1:1:2:2

  # Prefix with cmd to resize even smaller and place in corners or center.
  grid            < cmd - k           : yabai -m window --grid 5:5:4:4:1:1
  grid            < cmd - j           : yabai -m window --grid 5:5:0:4:1:1
  grid            < cmd - l           : yabai -m window --grid 5:5:4:0:1:1
  grid            < cmd - h           : yabai -m window --grid 5:5:0:0:1:1
  grid            < cmd - return      : yabai -m window --grid 6:6:2:2:2:2
